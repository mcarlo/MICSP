library("knitr", lib.loc="~/R/win-library/3.0")
install.packages("Datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library("UsingR", lib.loc="~/R/win-library/3.0")
library("evaluate", lib.loc="~/R/win-library/3.0")
load(mtcars)
data <- mtcars
summary(mtcars$mpg)
summary(lm(mtcars$mpg ~ weight))
summary(lm(mtcars$mpg ~ mtcars$weight))
summary(lm(mtcars$mpg ~ mtcars$wt))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
summary(lm(y ~ x))
lmCars <- lm(mtcars$mpg ~ mtcars$wt)
lm0Cars  <- lm(mtcars$mpg ~ mtcars$wt - 1)
predY <- predict(lmCars, newdata = mtcars$wt)
predY <- predict(lmCars)
predY0 <- predict(lm0Cars)
ssY <- sum(mtcars$mpg - predY)^2
ssY0 <- sum(mtcars$mpg - predY0)^2
ssY0/ssY
mtcars$mpg
predY
predY0
ssY <- sum((mtcars$mpg - predY)^2)
ssY0 <- sum((mtcars$mpg - predY0)^2)
ssY0/ssY
plot(mtcars$wt, SSY)
plot(mtcars$wt, predY)
plot(mtcars$wt, predY0)
plot(mtcars$wt, predY)
predY0 <- rep(mean(mtcars$mpg),length(mtcars$mpg))
ssY <- sum((mtcars$mpg - predY)^2)
ssY0 <- sum((mtcars$mpg - predY0)^2)
ssY0/ssY
plot(mtcars$wt, predY)
plot(mtcars$wt, predY0)
lm1Cars  <- lm(mtcars$mpg ~ mtcars$wt - 1)
lm1Cars  <- lm(mtcars$mpg ~ mtcars$wt + 0)
predY1 <- predict(lm1Cars)
ssY0 <- sum((mtcars$mpg - predY1)^2)
ssY0 <- sum((mtcars$mpg - predY0)^2)
ssY1 <- sum((mtcars$mpg - predY1)^2)
sY <- sum((mtcars$mpg - predY))
sY0 <- sum((mtcars$mpg - predY0))
sY1 <- sum((mtcars$mpg - predY1))
summary(lm(mtcars$mpg ~ mtcars$wt))
lmCars <- lm(mtcars$mpg ~ mtcars$wt)
predY <- predict(lmCars)
mean(predY - 1.95*stdev(predU))
mean(predY) - 1.95*stdev(predU))
mean(predY) - 1.95*stdev(predU)
mean(predY) - 1.95*sd(predU)
mean(predY) - 1.95*sd(predY)
mean(y) - 1.95*sd(predY)
mean(mtcars$mpg) -5.3445*mean(mtcars$wt) - 1.95*sd(mtcars$mpg)
37.2851 -5.3445*mean(mtcars$wt) - 1.95*sd(mtcars$mpg)
37.2851 -5.3445*mean(mtcars$wt) - 1.95*5.3445*sd(mtcars$wt)
37.2851 -5.3445*mean(mtcars$wt)
37.2851 -5.3445*3
?seed
?set.seed
set.seed <- 708
?runif
simA <- int(runif(10000)*10)+1
?integer
simA <- as.integer(runif(10000)*10)+1
hist(simA)
simB <- as.integer(runif(10000)*10)+1
simC <- as.integer(runif(10000)*10)+1
sum(simA == simB)
sum(simA == simC)
sum(simB == simC)
simScore <- simA^2+simB^2+simC^2
hist(simScore)
quantiles(simScore)
quantile(simScore)
mean(simScore)
set.seed <- 708
simA <- as.integer(runif(100000)*10)+1
simB <- as.integer(runif(100000)*10)+1
simC <- as.integer(runif(100000)*10)+1
simScore <- simA^2+simB^2+simC^2
hist(simScore)
quantile(simScore)
library("knitr", lib.loc="~/R/win-library/3.0")
library(UsingR)
y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight)
x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight)
rho <- cor(x, y)
myPlot <- function(x, y) {
plot(x, y,
xlab = "Father's height, normalized",
ylab = "Son's height, normalized",
xlim = c(-3, 3), ylim = c(-3, 3),
bg = "lightblue", col = "black", cex = 1.1, pch = 21,
frame = FALSE)
}
myPlot(x, y)
abline(0, 1) # if there were perfect correlation
abline(0, rho, lwd = 2) # father predicts son
abline(0, 1 / rho, lwd = 2) # son predicts father, son on vertical axis
abline(h = 0); abline(v = 0) # reference lines for no relathionship
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
data(diamond)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
abline(lm(price ~ carat, data = diamond), lwd = 2)
fit <- lm(price ~ carat, data = diamond)
coef(fit)
fit2 <- lm(price ~ I(carat - mean(carat)), data = diamond)
coef(fit2)
fit3 <- lm(price ~ I(carat * 10), data = diamond)
coef(fit3)
newx <- c(0.16, 0.27, 0.34)
coef(fit)[1] + coef(fit)[2] * newx
predict(fit, newdata = data.frame(carat = newx))
data(diamond)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
abline(fit, lwd = 2)
points(diamond$carat, predict(fit), pch = 19, col = "red")
lines(c(0.16, 0.16, 0.12),
c(200, coef(fit)[1] + coef(fit)[2] * 0.16,
coef(fit)[1] + coef(fit)[2] * 0.16))
lines(c(0.27, 0.27, 0.12),
c(200, coef(fit)[1] + coef(fit)[2] * 0.27,
coef(fit)[1] + coef(fit)[2] * 0.27))
lines(c(0.34, 0.34, 0.12),
c(200, coef(fit)[1] + coef(fit)[2] * 0.34,
coef(fit)[1] + coef(fit)[2] * 0.34))
text(newx, rep(250, 3), labels = newx, pos = 2)
library("htmltools", lib.loc="~/R/win-library/3.0")
set.seed <- 708
simA <- as.integer(runif(100000)*10)+1
simB <- as.integer(runif(100000)*10)+1
simScore <- simA^2+simB^2
hist(simScore)
quantile(simScore)
mean(simScore)
library("swirl", lib.loc="~/R/win-library/3.0")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
ictweak <- c(.1, .2, .3, -.1, -.2, -.3)  #one for the intercept
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varESt)
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag + dist, attenu)
all.equal(mean(efit$residuals), 0)
mean(efit$residuals) == 0
abs(mean(efit$residuals)) < 1e-12
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
lm(child ~ parent)
l_nor <- lm(gch_nor ~ gph_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
sigma <- sqrt(sum(fit$residuals^2)/926)
sqrt(sum(fit$residuals^2)/(n - 2))
summary(fig)$sigma
summary(fit)$sigma
sqrt(deviance(fit)/(n - 2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(dalton$parent, dalton$child)^2
cor(galton$parent, galton$child)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., Swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ Agriculture., swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
d
fit$coef - efit$coef
all$coefficients - efit$coefficients
library("swirl", lib.loc="~/R/win-library/3.0")
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit) - coef(fitno)
library("swirl", lib.loc="~/R/win-library/3.0")
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
library("swirl", lib.loc="~/R/win-library/3.0")
swirl()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.text(fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
glm(ravenWinNum ~ ravenScore, ravenData)
glm(ravenWinNum ~ ravenScore, ravenData, "binomial")
glm(ravenWinNum ~ ravenScore, ravenData, family = "binary")
glm(ravenWinNum ~ ravenScore, ravenData, family = "binomial")
glm(ravenWinNum ~ ravenScore, family = "binomial", ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6))
)
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[, 'date'])
as.integer(head(hits[,'date']))
as.integer(head(hits[,'date'])), poisson, hits)
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
?confint
setwd("~/GitHub/MICSP")
detach("package:car", unload=TRUE)
detach("package:swirl", unload=TRUE)
library("compiler", lib.loc="C:/Program Files/R/R-3.0.2/library")
library("grid", lib.loc="C:/Program Files/R/R-3.0.2/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.0.2/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.0.2/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.0.2/library")
bye()
exit()
library("base")
library("compiler")
library("datasets")
library("graphics")
library("grid")
library("grDevices")
library("knitr")
library("methods")
library("parallel")
library("splines")
library("stats")
library("stats4")
library("tcltk")
data <- mtcars
table(data$am, data$mpg )
cor(data)
fit <- lm(mpg ~ ., data)
summary(fit)
vif(fit)
?vif
??vif
library("car", lib.loc="~/R/win-library/3.0")
vif(fit)
fit2 <- lm(mpg ~ cyl + hp + drat + wt + qsec + vs + am + gear + carb, data)
summary(fit2)
vif(fit2)
fit3 <- lm(mpg ~ hp + drat + wt + qsec + vs + am + gear + carb, data)
vif(fit3)
fit4 <- lm(mpg ~ drat + wt + qsec + vs + am + gear + carb, data)
vif(fit4)
fit5 <- lm(mpg ~ drat + qsec + vs + am + gear + carb, data)
vif(fit5)
fit6 <- lm(mpg ~ drat + qsec + vs + am + carb, data)
vif(fit6)
fit7 <- lm(mpg ~ drat + vs + am + carb, data)
vif(fit7)
fit8 <- lm(mpg ~ vs + am + carb, data)
vif(fit8)
summary(fit8)
data <- mtcars
table(data$am, data$mpg )
cor(data)
fit <- lm(mpg ~ ., data)
summary(fit)
vif(fit)
fit2 <- lm(mpg ~ cyl + hp + drat + wt + qsec + vs + am + gear + carb, data)
summary(fit2)
vif(fit2)
fit3 <- lm(mpg ~ hp + drat + wt + qsec + vs + am + gear + carb, data)
vif(fit3)
fit4 <- lm(mpg ~ drat + wt + qsec + vs + am + gear + carb, data)
vif(fit4)
fit5 <- lm(mpg ~ drat + qsec + vs + am + gear + carb, data)
vif(fit5)
fit6 <- lm(mpg ~ drat + qsec + vs + am + carb, data)
vif(fit6)
fit7 <- lm(mpg ~ drat + vs + am + carb, data)
vif(fit7)
fit8 <- lm(mpg ~ vs + am + carb, data)
vif(fit8)
summary(fit8)
pairs(mtcars, main = "mtcars data")
pairs(~mpg + drat + qsec + vs + am + gear + carb,data=mtcars,
main="Simple Scatterplot Matrix")
coplot(mpg ~ wt | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(am), data = data,
panel = panel.smooth, rows = 1)
dfbetas(fit5)
hatvalues(fit5)
pairs(mtcars, main = "mtcars data")
pairs(~ mpg + wt + vs + am + carb,data=mtcars,
main="Simple Scatterplot Matrix")
?coplot
coplot(mpg ~ wt + vs + am + carb, data = data,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt * vs, data = data,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | vs * am, data = data,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | vs * carb, data = data,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | am * carb, data = data,
panel = panel.smooth, rows = 1)
coplot(mpg ~ vs | am * carb, data = data,
panel = panel.smooth, rows = 1)
coplot(mpg ~ am | vs * carb, data = data,
panel = panel.smooth, rows = 1)
confint(fit8)
fit9 <- lm(mpg ~ wt + vs + am + carb, data)
confint(fit9)
vif(fit9)
?vif
anova(fit8, fit9)
fit9resid <- resid(fit9)
plot(mpg, fit9resid)
plot(data$mpg, fit9resid)
cor(data$mpg, fit9resid)
fit8resid <- resid(fit8)
plot(data$mpg, fit8resid)
cor(data$mpg, fit8resid)
fit5resid <- resid(fit5)
plot(data$mpg, fit5resid)
cor(data$mpg, fit5resid)
plot(data$mpg, data$wt)
plot(data$mpg, log(data$wt))
cor(data$mpg, log(data$wt))
cor(data$mpg, data$wt)
fit4a <- lm(mpg ~ drat + log(wt) + qsec + vs + am + gear + carb, data)
vif(fit4a)
resid4a <- resid(fit4a)
cor(data$mpg, resid4a)
confint(fit4a)
fit4b <- lm(mpg ~ log(wt) + vs + am + carb, data)
vif(fit4b)
resid4b <- resid(fit4b)
cor(data$mpg, resid4b)
confint(fit4b)
plot(data$mpg, resid4b)
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
par(mfrow = c(2, 2))
fit <- lm(mpg ~ . , data = data); plot(fit)
round(dfbetas(fit),3)
round(dfbetas(fit[,9]),3)
round(dfbetas(fit)[,9],3)
round(hatvalues(fit),3)
plot(predict(fit))
cor(data$mpg, predict(fit))
cor(data$mpg, resid(fit))
par(mfrow = c(2, 2))
plot(fit)
fit1 <- lm(mpg ~ am, data = data)
a <- summary(fit1)$cov.unscaled[2,2]
fit2 <- update(fit1, mpg ~ am + vs)
fit3 <- update(fit1, mpg ~ am + vs + carb)
fit4 <- update(fit1, mpg ~ am + vs + carb + wt)
c(summary(fit2)$cov.unscaled[2,2],
summary(fit3)$cov.unscaled[2,2],summary(fit4)$cov.unscaled[2,2] ) / a
anova(fit1, fit2, fit3, fit4)
library("car", lib.loc="~/R/win-library/3.0")
